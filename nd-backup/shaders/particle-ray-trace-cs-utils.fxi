



float EvaluateSh(float4 dir, float c0, float c1, float c2, float c3, float c4, float c5, float c6, float c7, float c8)
{
	// cos lobe oriented along given direction	
	const float basisShCoeffs[9] =
	{
		1.0f / (2.0f * sqrt(kPi)),
		(sqrt(3.0f) * dir.y) / (2.0f * sqrt(kPi)),
		(sqrt(3.0f) * dir.z) / (2.0f * sqrt(kPi)),
		(sqrt(3.0f) * dir.x) / (2.0f * sqrt(kPi)),

		(sqrt(15.0f) * dir.y * dir.x) / (2.0f * sqrt(kPi)),
		(sqrt(15.0f) * dir.y * dir.z) / (2.0f * sqrt(kPi)),
		(sqrt(5.0f) * (3.0f * dir.z * dir.z - 1.0f)) / (4.0f * sqrt(kPi)),
		(sqrt(15.0f) * dir.x * dir.z) / (2.0f * sqrt(kPi)),

		(sqrt(15.0f) * (dir.x * dir.x - dir.y * dir.y)) / (4.0f * sqrt(kPi))
	};

	// do a cos lobe integration along the normal to get the remaining base lighting
	float baseLight;

	baseLight = basisShCoeffs[0] * c0 +
		+basisShCoeffs[1] * c1
		+ basisShCoeffs[2] * c2
		+ basisShCoeffs[3] * c3
		+ basisShCoeffs[4] * c4
		+ basisShCoeffs[5] * c5
		+ basisShCoeffs[6] * c6
		+ basisShCoeffs[7] * c7
		+ basisShCoeffs[8] * c8;

	return baseLight;
}
